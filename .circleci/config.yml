version: 2.1

commands:
  download_cache_dependencies_unleash:
    description: "Download and cache dependencies for sample app"
    steps:
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "unleash/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew unleash:dependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "unleash/build.gradle" }}

  download_cache_dependencies_sample:
    description: "Download and cache dependencies for sample app"
    steps:
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "sample/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew sample:androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "sample/build.gradle" }}

jobs:
  detekt-unleash:
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - download_cache_dependencies_unleash
      - run: ./gradlew unleash:detekt

  build-unleash:
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - checkout
      - download_cache_dependencies_unleash
      - run: ./gradlew clean unleash:test unleash:assemble
      - store_artifacts:
          path: unleash/build/libs/unleash.jar

  detekt-sample:
    docker:
      - image: circleci/android:api-29
    steps:
      - checkout
      - download_cache_dependencies_sample
      - run: ./gradlew sample:detekt

  build-sample:
    docker:
      - image: circleci/android:api-29
    steps:
      - checkout
      - download_cache_dependencies_sample
      - run: ./gradlew clean sample:test sample:assembleRelease
      - store_artifacts:
          path: sample/build/outputs/apk/release/sample-release.apk

  pgp-key:
    docker:
     - image: 377621159926.dkr.ecr.us-east-1.amazonaws.com/dvo/aws-ci
    steps:
     - run: |
        aws secretsmanager get-secret-value --secret-id service/sonatype-repository/maven-pgp-request | jq --raw-output '.SecretString'> /tmp/gpg_secret
        cat /tmp/gpg_secret | jq -r .key | base64 -di > /tmp/private.key
        gpg --batch --passphrase $(cat /tmp/gpg_secret | jq -r .passphrase) --import /tmp/private.key
        tar cf /tmp/gnupg.tar ~/.gnupg/
     - persist_to_workspace:
         root: /tmp
         paths: gnupg.tar

  publish-unleash:
    environment:
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker:
      - image: circleci/openjdk:8-jdk-stretch
    steps:
      - attach_workspace:
         at: /tmp
      - checkout
      - run: tar xf /tmp/gnupg.tar
      - download_cache_dependencies_unleash
      - run: ./gradlew clean unleash:uploadArchives

workflows:
  unleash-workflow:
    jobs:
      - detekt-unleash
      - build-unleash:
          requires:
            - detekt-unleash
      - detekt-sample:
          requires:
            - build-unleash
      - build-sample:
          requires:
            - detekt-sample
      - publish-unleash:
          requires:
            - build-unleash
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
